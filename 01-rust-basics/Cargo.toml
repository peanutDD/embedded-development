[package]
name = "rust-basics"
version = "0.1.0"
edition = "2021"
authors = ["Embedded Development Course"]
description = "Rust基础知识学习项目，为嵌入式开发做准备"
license = "MIT OR Apache-2.0"
repository = "https://github.com/your-repo/embedded-development"
keywords = ["rust", "embedded", "basics", "learning"]
categories = ["embedded", "development-tools"]

[dependencies]
# 基础依赖
serde = { version = "1.0", features = ["derive"] }
serde_json = "1.0"
tokio = { version = "1.0", features = ["full"] }
clap = { version = "4.0", features = ["derive"] }
anyhow = "1.0"
thiserror = "1.0"

# 宏与代码生成辅助
paste = "1.0"

# 集合和数据结构
indexmap = "2.0"
smallvec = "1.11"

# 并发编程
rayon = "1.7"
crossbeam = "0.8"
parking_lot = "0.12"

# 时间和随机数
chrono = { version = "0.4", features = ["serde"] }
rand = "0.8"

# 日志和调试
log = "0.4"
env_logger = "0.10"
tracing = "0.1"
tracing-subscriber = "0.3"

[dev-dependencies]
# 测试依赖
criterion = { version = "0.5", features = ["html_reports"] }
proptest = "1.2"
mockall = "0.11"
tempfile = "3.7"

[lib]
name = "rust_basics"
path = "src/lib.rs"

# 示例程序配置
[[example]]
name = "ownership_demo"
path = "examples/ownership_demo.rs"

[[example]]
name = "functions_closures_demo"
path = "examples/functions_closures_demo.rs"

[[example]]
name = "structs_enums_demo"
path = "examples/structs_enums_demo.rs"

[[example]]
name = "collections_demo"
path = "examples/collections_demo.rs"

[[example]]
name = "error_handling_demo"
path = "examples/error_handling_demo.rs"

# 练习程序配置
[[bin]]
name = "basic_exercises"
path = "exercises/basic_exercises.rs"

[[bin]]
name = "advanced_exercises"
path = "exercises/advanced_exercises.rs"

# 基准测试配置 - 暂时注释掉，因为基准测试文件不存在
# [[bench]]
# name = "collections_bench"
# harness = false

# [[bench]]
# name = "ownership_bench"
# harness = false

[profile.dev]
# 开发模式配置
opt-level = 0
debug = true
split-debuginfo = "unpacked"
debug-assertions = true
overflow-checks = true
lto = false
panic = "unwind"
incremental = true
codegen-units = 256
rpath = false

[profile.release]
# 发布模式配置 (嵌入式优化)
opt-level = 3
debug = false
split-debuginfo = "off"
debug-assertions = false
overflow-checks = false
lto = true
panic = "abort"
incremental = false
codegen-units = 1
rpath = false

[profile.bench]
# 基准测试配置
opt-level = 3
debug = false
rpath = false
lto = true
debug-assertions = false
codegen-units = 1

# 嵌入式目标配置示例
[profile.embedded]
inherits = "release"
opt-level = "z"  # 优化代码大小
lto = true
panic = "abort"
codegen-units = 1
strip = true

# Cargo特性配置
[features]
default = ["std"]
std = []
no_std = []
embedded = ["no_std"]

# 注意：此项目是根工作空间的成员，不需要自己的工作空间配置

# 元数据配置
[package.metadata.docs.rs]
all-features = true
rustdoc-args = ["--cfg", "docsrs"]

# 发布配置
[package.metadata.release]
sign-commit = false
sign-tag = false
pre-release-commit-message = "Release {{version}}"
pro-release-commit-message = "Start next development iteration {{version}}"
tag-message = "{{version}}"
tag-prefix = "v"
tag-name = "{{prefix}}{{version}}"
pre-release-replacements = [
  {file="README.md", search="rust-basics = \"[a-z0-9\\.-]+\"", replace="rust-basics = \"{{version}}\""},
  {file="src/lib.rs", search="//! Version [a-z0-9\\.-]+", replace="//! Version {{version}}"},
]