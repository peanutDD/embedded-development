[package]
name = "scheduler"
version = "0.1.0"
edition = "2021"
authors = ["Embedded Development Course"]
description = "嵌入式实时调度器实现示例"
license = "MIT OR Apache-2.0"

[dependencies]
# 核心依赖
cortex-m = "0.7"
cortex-m-rt = "0.7"
panic-halt = "0.2"

# 嵌入式HAL
embedded-hal = "0.2"
nb = "1.0"

# 数据结构
heapless = "0.8"

# 调试和日志
defmt = "0.3"
defmt-rtt = "0.4"

# 可选的STM32支持
stm32f4xx-hal = { version = "0.14", optional = true, features = ["rt", "stm32f407"] }

[dev-dependencies]
# 测试依赖
cortex-m-semihosting = "0.5"

[features]
default = ["stm32f4"]
stm32f4 = ["stm32f4xx-hal"]

# 调度算法特性
rate-monotonic = []
earliest-deadline-first = []
priority-inheritance = []
priority-ceiling = []

# 调试特性
scheduler-debug = []
task-profiling = []
deadlock-detection = []

[profile.dev]
debug = true
opt-level = 1

[profile.release]
debug = false
opt-level = "s"  # 优化代码大小
lto = true
codegen-units = 1

[[bin]]
name = "rate_monotonic_demo"
path = "src/bin/rate_monotonic_demo.rs"

[[bin]]
name = "edf_demo"
path = "src/bin/edf_demo.rs"

[[bin]]
name = "priority_inheritance_demo"
path = "src/bin/priority_inheritance_demo.rs"

[[bin]]
name = "scheduler_benchmark"
path = "src/bin/scheduler_benchmark.rs"