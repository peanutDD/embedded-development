[package]
name = "uart_analyzer"
version = "0.1.0"
edition = "2021"
authors = ["Embedded Developer <dev@example.com>"]
description = "UART信号分析器 - 硬件特性测量和协议分析"
license = "MIT OR Apache-2.0"
repository = "https://github.com/example/embedded-development"
readme = "README.md"
keywords = ["embedded", "uart", "analyzer", "protocol", "measurement"]
categories = ["embedded", "no-std"]

[dependencies]
# 核心嵌入式依赖
cortex-m = "0.7"
cortex-m-rt = "0.7"
panic-halt = "0.2"
nb = "1.0"
embedded-hal = "0.2"

# 调试和日志
rtt-target = { version = "0.4", features = ["cortex-m"] }
cortex-m-log = { version = "0.8", features = ["log-integration", "rtt"] }
log = "0.4"

# 数学和统计
micromath = "2.0"
heapless = "0.7"
num-traits = { version = "0.2", default-features = false }

# 时间和测量
fugit = "0.3"
embedded-time = "0.12"

# 数据处理
crc = { version = "3.0", default-features = false }
byteorder = { version = "1.4", default-features = false }

# 平台特定HAL库 (条件编译)
[target.'cfg(feature = "stm32f4")'.dependencies]
stm32f4xx-hal = { version = "0.16", features = ["rt", "stm32f407"] }

[target.'cfg(feature = "stm32f1")'.dependencies]
stm32f1xx-hal = { version = "0.10", features = ["rt", "stm32f103", "medium"] }

[target.'cfg(feature = "esp32")'.dependencies]
esp32-hal = "0.15"
esp-backtrace = { version = "0.8", features = ["esp32", "panic-handler", "exception-handler", "print-rtt"] }

[target.'cfg(feature = "rp2040")'.dependencies]
rp2040-hal = { version = "0.9", features = ["rt"] }
rp2040-boot2 = "0.3"

[dev-dependencies]
# 测试框架
embedded-test = "0.3"
defmt-test = "0.3"
defmt-rtt = "0.4"

# 基准测试
criterion = { version = "0.5", default-features = false }

[features]
default = ["stm32f4", "signal-analysis", "protocol-decode"]

# 平台支持
stm32f4 = []
stm32f1 = []
esp32 = []
rp2040 = []

# 分析功能
signal-analysis = ["micromath"]
protocol-decode = ["crc", "byteorder"]
timing-measurement = ["embedded-time"]
statistics = ["num-traits"]

# 协议支持
modbus-support = []
ascii-protocols = []
binary-protocols = []
custom-protocols = []

# 调试特性
debug-analyzer = ["rtt-target", "cortex-m-log"]
performance-profiling = []

[[bin]]
name = "uart_analyzer"
path = "src/main.rs"

[[example]]
name = "signal_measurement"
path = "examples/signal_measurement.rs"

[[example]]
name = "protocol_decoder"
path = "examples/protocol_decoder.rs"

[[example]]
name = "timing_analysis"
path = "examples/timing_analysis.rs"

[[example]]
name = "error_detection"
path = "examples/error_detection.rs"

[[example]]
name = "baud_rate_detection"
path = "examples/baud_rate_detection.rs"

[profile.dev]
debug = true
opt-level = 1
overflow-checks = true
lto = false
codegen-units = 16

[profile.release]
debug = false
opt-level = 3
lto = true
codegen-units = 1
panic = "abort"

# 分析优化配置
[profile.analysis]
inherits = "release"
debug = true
lto = "thin"

# 大小优化配置
[profile.size]
inherits = "release"
opt-level = "s"
strip = true

[build-dependencies]
cc = "1.0"