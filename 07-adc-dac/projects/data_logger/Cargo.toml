[package]
name = "data_logger"
version = "0.1.0"
edition = "2021"
authors = ["Embedded Developer <dev@example.com>"]
description = "高性能数据记录器 - 多通道ADC数据采集与存储系统"
license = "MIT OR Apache-2.0"
repository = "https://github.com/example/embedded-development"
keywords = ["embedded", "adc", "data-logger", "storage", "filesystem"]
categories = ["embedded", "hardware-support"]

[dependencies]
# 核心嵌入式依赖
cortex-m = "0.7"
cortex-m-rt = "0.7"
embedded-hal = "1.0"
nb = "1.0"
panic-halt = "0.2"

# 调试和日志
rtt-target = { version = "0.4", features = ["cortex-m"] }
cortex-m-log = { version = "0.8", features = ["itm", "semihosting"] }
log = "0.4"

# 数据结构和集合
heapless = { version = "0.8", features = ["serde"] }
arrayvec = { version = "0.7", default-features = false }
tinyvec = { version = "1.6", features = ["alloc"] }

# 序列化和反序列化
serde = { version = "1.0", default-features = false, features = ["derive"] }
serde-json-core = "0.5"
postcard = { version = "1.0", features = ["heapless"] }
bincode = "1.3"

# 时间和定时器
fugit = "0.3"
systick-monotonic = "1.0"

# 数学和统计
libm = "0.2"
micromath = "2.0"
num-traits = { version = "0.2", default-features = false, features = ["libm"] }

# 文件系统和存储
embedded-sdmmc = "0.7"
littlefs2 = "0.4"
sequential-storage = "2.0"

# 加密和校验
crc = { version = "3.0", default-features = false }
sha2 = { version = "0.10", default-features = false }
aes = { version = "0.8", default-features = false }

# 内存管理
linked_list_allocator = "0.10"
embedded-alloc = "0.5"

# 错误处理
thiserror-no-std = "2.0"

# 平台特定HAL库 (条件编译)
[target.'cfg(feature = "stm32f4")'.dependencies]
stm32f4xx-hal = { version = "0.20", features = ["rt", "stm32f407", "usb_fs"] }

[target.'cfg(feature = "stm32h7")'.dependencies]
stm32h7xx-hal = { version = "0.16", features = ["rt", "stm32h743v"] }

[target.'cfg(feature = "esp32")'.dependencies]
esp32-hal = "0.19"
esp-backtrace = { version = "0.11", features = ["esp32", "panic-handler", "exception-handler", "print-rtt"] }

[target.'cfg(feature = "rp2040")'.dependencies]
rp-pico = "0.8"
rp2040-hal = { version = "0.9", features = ["rt", "critical-section-impl"] }

# 开发依赖
[dev-dependencies]
criterion = { version = "0.5", default-features = false }
proptest = { version = "1.0", default-features = false }

# 功能特性
[features]
default = ["stm32f4"]
stm32f4 = []
stm32h7 = []
esp32 = []
rp2040 = []
encryption = ["aes", "sha2"]
compression = []
wireless = []
display = []

# 二进制目标
[[bin]]
name = "data_logger"
path = "src/main.rs"

# 示例程序
[[example]]
name = "basic_logging"
path = "examples/basic_logging.rs"

[[example]]
name = "multi_channel"
path = "examples/multi_channel.rs"

[[example]]
name = "filesystem_test"
path = "examples/filesystem_test.rs"

[[example]]
name = "data_analysis"
path = "examples/data_analysis.rs"

# 优化配置
[profile.dev]
debug = true
opt-level = 1
overflow-checks = true
lto = false
codegen-units = 16
panic = "abort"
incremental = true

[profile.release]
debug = false
opt-level = 3
overflow-checks = false
lto = true
codegen-units = 1
panic = "abort"
strip = true

[profile.size]
inherits = "release"
opt-level = "s"
lto = true
codegen-units = 1
panic = "abort"
strip = "symbols"

[profile.perf]
inherits = "release"
debug = 1
opt-level = 3
overflow-checks = false
lto = "fat"
codegen-units = 1

# 构建依赖
[build-dependencies]
cc = "1.0"