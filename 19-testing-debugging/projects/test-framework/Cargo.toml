[package]
name = "embedded-test-framework"
version = "0.1.0"
edition = "2021"
authors = ["Embedded Developer <dev@example.com>"]
description = "Comprehensive testing framework for embedded Rust development"
license = "MIT OR Apache-2.0"
repository = "https://github.com/example/embedded-development"

[dependencies]
# Core dependencies
cortex-m = "0.7"
cortex-m-rt = "0.7"
panic-halt = "0.2"

# STM32F4 HAL
stm32f4xx-hal = { version = "0.14", features = ["stm32f401", "rt"] }

# Embedded HAL
embedded-hal = "0.2"
nb = "1.0"

# RTIC for real-time testing
cortex-m-rtic = "1.1"

# Testing framework
embedded-test = "0.3"
defmt = "0.3"
defmt-rtt = "0.4"

# Mock and stub utilities
embedded-hal-mock = "0.9"
mockall = "0.11"

# Property testing
proptest = "1.0"
quickcheck = "1.0"

# Benchmarking
criterion = { version = "0.4", features = ["html_reports"] }

# Communication and serialization
serde = { version = "1.0", default-features = false, features = ["derive"] }
serde-json-core = "0.4"
postcard = "1.0"

# Data structures
heapless = "0.7"
generic-array = "0.14"

# Utilities
void = "1.0"
nb = "1.0"
fugit = "0.3"

# Cryptography for test data integrity
sha2 = { version = "0.10", default-features = false }
crc = "3.0"

# Time and delays
systick-monotonic = "1.0"

[dev-dependencies]
# Additional testing utilities
assert_matches = "1.5"
pretty_assertions = "1.3"
serial_test = "2.0"

[features]
default = ["std"]
std = []
no-std = []

# Testing features
unit-testing = []
integration-testing = []
hardware-testing = []
performance-testing = []
stress-testing = []
mock-hardware = []
real-hardware = []

# Communication testing
uart-testing = []
spi-testing = []
i2c-testing = []
can-testing = []

# Advanced features
property-testing = []
fuzz-testing = []
coverage-analysis = []

[[bin]]
name = "test_runner"
path = "src/main.rs"

[[bin]]
name = "unit_test_runner"
path = "src/unit_test_runner.rs"

[[bin]]
name = "integration_test_runner"
path = "src/integration_test_runner.rs"

[[bin]]
name = "hardware_test_runner"
path = "src/hardware_test_runner.rs"

[[bin]]
name = "performance_test_runner"
path = "src/performance_test_runner.rs"

[profile.dev]
debug = true
opt-level = 0
overflow-checks = true

[profile.release]
debug = true
opt-level = "s"
lto = true
codegen-units = 1
panic = "abort"

[profile.test]
debug = true
opt-level = 1

# Target configuration
[target.thumbv7em-none-eabihf]
runner = "probe-run --chip STM32F401RETx"
rustflags = [
  "-C", "linker=flip-link",
  "-C", "link-arg=-Tlink.x",
  "-C", "link-arg=-Tdefmt.x",
]

# Memory configuration
[target.'cfg(all(target_arch = "arm", target_os = "none"))']
rustflags = [
  "-C", "link-arg=-Tlink.x",
]

# Testing configuration
[package.metadata.docs.rs]
default-target = "thumbv7em-none-eabihf"
targets = ["thumbv7em-none-eabihf"]

# Test framework configuration
[package.metadata.test-framework]
hardware_required = true
test_timeout = 60
max_test_duration = 30
setup_script = "scripts/setup_test_environment.sh"
teardown_script = "scripts/cleanup_test_environment.sh"

# Test categories
unit_tests = ["math", "data_structures", "algorithms"]
integration_tests = ["hal", "communication", "protocols"]
hardware_tests = ["gpio", "uart", "spi", "i2c", "adc", "timers"]
performance_tests = ["throughput", "latency", "memory", "power"]

# Test reporting
report_format = "json"
report_output = "test_results"
coverage_enabled = true
benchmark_enabled = true

# Defmt configuration
[package.metadata.defmt]
log_level = "debug"

# Memory layout
[package.metadata.memory]
flash_size = "512K"
ram_size = "96K"
stack_size = "8K"
heap_size = "16K"